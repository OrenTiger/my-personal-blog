@using CaptchaMvc.HtmlHelpers
@model MyPersonalBlog.Models.Comment

@{
    AjaxOptions ajaxOpts = new AjaxOptions { UpdateTargetId = "commentFormContainer" };
}

@if (ViewBag.IsCommentSuccess == true)
{
    <div class="alert alert-success">
        <p>
            Ваш комментарий успешно добавлен. После модерации он будет опубликован.
        </p>
    </div>
}
else
{
    using (Ajax.BeginForm("Save", "Comment", null, ajaxOpts, new { role = "form" }))
    { 
        <h4>Оставить комментарий:</h4>
        <div class="form-group comment-form">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(null, new { @class = "alert alert-danger" })

            @Html.HiddenFor(m => m.PostId)

            <div class="form-group">
                <label>Ваше имя:</label>
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Комментарий:</label>
                @Html.TextAreaFor(m => m.Text, new { @class = "form-control", rows = "7" })
            </div>
            <div class="form-group">
                @{
                    var captcha = Html.Captcha("Обновить", "Введите текст", 5, "Капча должна быть указана", false);
                }
                @captcha
                @Html.ValidationMessage(captcha.BuildInfo.InputElementId)
            </div>
            <button type="submit" class="btn btn-default">Отправить</button>
        </div>
    }
}

<script>
    $().function
    {
        $("input[data-val-length-max]").each(function () {
            var $this = $(this);
            var data = $this.data();
            $this.attr("maxlength", data.valLengthMax);
        });
    }
</script>